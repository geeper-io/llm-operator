name: Build and Deploy Documentation (Custom)

on:
  push:
    branches: [ main, master ]
    paths:
      - 'www/**'
      - '.github/workflows/docs-custom-deploy.yml'
      - 'docs/**'
      - 'examples/**'
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'Deployment target'
        required: true
        default: 'netlify'
        type: choice
        options:
          - netlify
          - vercel
          - s3
          - custom

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'www/package-lock.json'
      
      - name: Install dependencies
        working-directory: www
        run: npm ci
      
      - name: Build documentation
        working-directory: www
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs-build
          path: www/build
          retention-days: 30

  deploy-netlify:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'netlify' || github.event.inputs.deploy_target == 'netlify'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: build
      
      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-vercel:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'vercel'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./build

  deploy-s3:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 's3'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET }} --delete
          aws s3 website s3://${{ secrets.S3_BUCKET }} --index-document index.html --error-document 404.html
      
      - name: Invalidate CloudFront
        if: secrets.CLOUDFRONT_DISTRIBUTION_ID
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  deploy-custom:
    needs: build
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy_target == 'custom'
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs-build
          path: build
      
      - name: Deploy to custom server
        run: |
          # Add your custom deployment logic here
          # Examples:
          # - rsync to remote server
          # - scp to remote server
          # - curl to deployment webhook
          # - custom deployment script
          echo "Custom deployment target selected. Add your deployment logic here."



